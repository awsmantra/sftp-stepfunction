AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: create/delete SFTP step function
Resources:
  SFTPTable:
    Type: AWS::DynamoDB::Table
    DeletionPolicy: Delete
    Properties:
      KeySchema:
      - AttributeName: PK
        KeyType: HASH
      - AttributeName: SK
        KeyType: RANGE
      AttributeDefinitions:
      - AttributeName: PK
        AttributeType: S
      - AttributeName: SK
        AttributeType: S
      BillingMode: PAY_PER_REQUEST
      TableName: SFTP
  SFTPBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: sftp-test-04122023
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
  StateExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - Fn::Sub: states.${AWS::Region}.amazonaws.com
            - Fn::Sub: transfer.amazonaws.com
          Action:
          - sts:AssumeRole
      Policies:
      - PolicyName: WriteCloudWatchLogs
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            - logs:CreateLogDelivery
            - logs:GetLogDelivery
            - logs:UpdateLogDelivery
            - logs:DeleteLogDelivery
            - logs:ListLogDeliveries
            - logs:PutResourcePolicy
            - logs:DescribeResourcePolicies
            - logs:DescribeLogGroups
            Resource: '*'
      - PolicyName: DynamoDBAccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
            - dynamodb:Query
            Resource:
              Fn::GetAtt:
              - SFTPTable
              - Arn
      - PolicyName: S3Policy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - s3:Get*
            - s3:Put*
            - s3:List*
            Resource:
            - Fn::Join:
              - ''
              - - 'arn:aws:s3:::'
                - Ref: SFTPBucket
                - /*
      - PolicyName: TransferServerPolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - iam:PassRole,
            - transfer:*
            Resource: '*'
  SFTPBaseRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - Fn::Sub: transfer.amazonaws.com
          Action:
          - sts:AssumeRole
      Policies:
      - PolicyName: S3Policy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - s3:Get*
            - s3:Put*
            - s3:List*
            - s3:Delete*
            Resource:
            - Fn::Join:
              - ''
              - - 'arn:aws:s3:::'
                - Ref: SFTPBucket
                - /*
            - Fn::Join:
              - ''
              - - 'arn:aws:s3:::'
                - Ref: SFTPBucket
      - PolicyName: WriteCloudWatchLogs
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            - logs:CreateLogDelivery
            - logs:GetLogDelivery
            - logs:UpdateLogDelivery
            - logs:DeleteLogDelivery
            - logs:ListLogDeliveries
            - logs:PutResourcePolicy
            - logs:DescribeResourcePolicies
            - logs:DescribeLogGroups
            Resource: '*'
  SFTPServerStateMachineLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName:
        Fn::Sub: /aws/vendedlogs/states/${AWS::StackName}
      RetentionInDays: 1
  CreateSFTPServerStateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      Name: create-sftp-server-state-machine
      DefinitionUri: ../../../statemachine/create-sftp-server.json
      DefinitionSubstitutions:
        SFTPBaseRole:
          Fn::GetAtt:
          - SFTPBaseRole
          - Arn
        SFTPTable:
          Ref: SFTPTable
      Role:
        Fn::GetAtt:
        - StateExecutionRole
        - Arn
      Logging:
        Destinations:
        - CloudWatchLogsLogGroup:
            LogGroupArn:
              Fn::GetAtt:
              - SFTPServerStateMachineLogGroup
              - Arn
        IncludeExecutionData: true
        Level: ALL
  DeleteSFTPServerStateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      Name: delete-sftp-server-state-machine
      DefinitionUri: ../../../statemachine/delete-sftp-server.json
      DefinitionSubstitutions:
        SFTPBaseRole:
          Fn::GetAtt:
          - SFTPBaseRole
          - Arn
        SFTPTable:
          Ref: SFTPTable
      Role:
        Fn::GetAtt:
        - StateExecutionRole
        - Arn
      Logging:
        Destinations:
        - CloudWatchLogsLogGroup:
            LogGroupArn:
              Fn::GetAtt:
              - SFTPServerStateMachineLogGroup
              - Arn
        IncludeExecutionData: true
        Level: ALL
  SFTPScheduleRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - scheduler.amazonaws.com
          Action:
          - sts:AssumeRole
      Policies:
      - PolicyName: InvokeStateMachine
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - states:startExecution
            Resource:
            - Fn::GetAtt:
              - CreateSFTPServerStateMachine
              - Arn
            - Fn::GetAtt:
              - DeleteSFTPServerStateMachine
              - Arn
  DeleteSFTPSchedule:
    Type: AWS::Scheduler::Schedule
    Properties:
      Description: Schedule the runs every day 08:00 PM CST
      FlexibleTimeWindow:
        Mode: 'OFF'
      ScheduleExpression: cron(0 20 ? * * *)
      ScheduleExpressionTimezone: America/Chicago
      Target:
        Arn:
          Fn::GetAtt:
          - DeleteSFTPServerStateMachine
          - Arn
        RoleArn:
          Fn::GetAtt:
          - SFTPScheduleRole
          - Arn
  CreateSFTPSchedule:
    Type: AWS::Scheduler::Schedule
    Properties:
      Description: Schedule the runs every day 08:00 AM CST
      FlexibleTimeWindow:
        Mode: 'OFF'
      ScheduleExpression: cron(0 8 ? * * *)
      ScheduleExpressionTimezone: America/Chicago
      Target:
        Arn:
          Fn::GetAtt:
          - CreateSFTPServerStateMachine
          - Arn
        RoleArn:
          Fn::GetAtt:
          - SFTPScheduleRole
          - Arn
Outputs:
  CreateStateMachineArn:
    Export:
      Name: CreateSFTPStateMachineArn
      Description: CreateSFTPStateMachineArn
    Value:
      Fn::GetAtt:
      - CreateSFTPServerStateMachine
      - Arn
  DeleteStateMachineArn:
    Export:
      Name: DeleteSFTPServerStateMachine
      Description: DeleteSFTPStateMachineArn
    Value:
      Fn::GetAtt:
      - DeleteSFTPServerStateMachine
      - Arn
